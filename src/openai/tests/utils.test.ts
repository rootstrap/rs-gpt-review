import { isCommentByAssistant, escapeComment, unescapeComment, escapeUser, removeTextOccurrence } from '../utils';

const AVAILABLE_COMMANDS = ['--help', '--model', '--prompts', '--prompt', '--exclude', '--include'];

describe('isCommentByAssistant', () => {
  test('should return true when comment starts with ASSISTANT_COMMENT_PREFIX', () => {
    const comment = '<!-- rs-gpt-review --> Hello world! <!-- /rs-gpt-review -->';
    expect(isCommentByAssistant(comment)).toBe(true);
  });

  test('should return false when comment does not start with ASSISTANT_COMMENT_PREFIX', () => {
    const comment = 'Hello world!';
    expect(isCommentByAssistant(comment)).toBe(false);
  });
});

describe('escapeComment', () => {
  test('should return the comment with prefix, suffix, and link appended', () => {
    const comment = 'Hello world!';
    const expected = `<!-- rs-gpt-review -->\n${comment}\n<!-- /rs-gpt-review -->\n<sub>generated by [rs-gpt-review](https://github.com/rootstrap/rs-gpt-review)</sub>`;
    expect(escapeComment(comment)).toBe(expected);
  });
});

describe('unescapeComment', () => {
  test('should return the comment without prefix and suffix', () => {
    const comment = '<!-- rs-gpt-review --> Hello world! <!-- /rs-gpt-review -->';
    expect(unescapeComment(comment)).toBe('Hello world!');
  });

  test('should return the comment as is if it does not contain prefix and suffix', () => {
    const comment = 'Hello world!';
    expect(unescapeComment(comment)).toBe(comment);
  });
});

describe('escapeUser', () => {
  test('should remove [bot] from the end of the user name', () => {
    const user = 'test-bot';
    expect(escapeUser(`${user}[bot]`)).toBe(user);
  });

  test('should remove all special characters from the user name', () => {
    const user = '_te%$#@!^&*()=+[]{}|;:\'",.<>/?st-';
    expect(escapeUser(user)).toBe('_test-');
  });
});

describe('removeTextOccurrence', () => {
  it('should return a shorter string than the original, removing model', () => {
    const originalPrompt: any = [
      {
        role: 'system',
        content:
          'You are a helpful assistant for GitHub issues and pull requests.\nYour name is rs-gpt-review and your handle is @rs-gpt-review.\nYou respond to comments when someone mentions you.',
      },
      {
        role: 'system',
        content:
          'The current pull request was created by pablanco in repository lambda-monitor.\nPull request number: 14\nPull request title: `testing`\nPull request description:\n```\n@rs-gpt-review what is this PR about?\n```',
      },
      {
        role: 'system',
        content:
          'Git diff:\ndiff --git a/.github/workflows/rs-gpt-review.yml b/.github/workflows/rs-gpt-review.yml\nindex 116e91c..36e1e0d 100644\n--- a/.github/workflows/rs-gpt-review.yml\n+++ b/.github/workflows/rs-gpt-review.yml\n@@ -25,7 +25,7 @@ jobs:\n     steps:\n       - uses: actions/checkout@v3\n       # The action will only run if the description or comments mentions @rs-gpt-review\n-      - uses: rootstrap/rs-gpt-review@v2\n+      - uses: rootstrap/rs-gpt-review@beta\n         name: rs-gpt-review\n         with:\n           github_token: ${{ secrets.GITHUB_TOKEN }}\n@@ -36,3 +36,4 @@ jobs:\n           GITHUB_CONTEXT: ${{ toJson(github) }}\n         run: |\n           echo "$GITHUB_CONTEXT"\n+          pwd\n',
      },
      {
        role: 'system',
        content: 'Here are the comments:',
      },
      {
        role: 'user',
        name: 'pablanco',
        content: '@rs-gpt-review --model gpt-4 hello',
      },
    ];

    const originalLenght = originalPrompt[4].content.length;
    const resultPrompt = removeTextOccurrence(originalPrompt, AVAILABLE_COMMANDS);
    expect(originalPrompt.length).toBe(resultPrompt.length);
    expect(resultPrompt[4].content.length).toBeLessThan(originalLenght);
  });
  it('should return a shorter string than the original, removing help', () => {
    const originalPrompt: any = [
      {
        role: 'system',
        content:
          'You are a helpful assistant for GitHub issues and pull requests.\nYour name is rs-gpt-review and your handle is @rs-gpt-review.\nYou respond to comments when someone mentions you.',
      },
      {
        role: 'system',
        content:
          'The current pull request was created by pablanco in repository lambda-monitor.\nPull request number: 14\nPull request title: `testing`\nPull request description:\n```\n@rs-gpt-review what is this PR about?\n```',
      },
      {
        role: 'system',
        content:
          'Git diff:\ndiff --git a/.github/workflows/rs-gpt-review.yml b/.github/workflows/rs-gpt-review.yml\nindex 116e91c..36e1e0d 100644\n--- a/.github/workflows/rs-gpt-review.yml\n+++ b/.github/workflows/rs-gpt-review.yml\n@@ -25,7 +25,7 @@ jobs:\n     steps:\n       - uses: actions/checkout@v3\n       # The action will only run if the description or comments mentions @rs-gpt-review\n-      - uses: rootstrap/rs-gpt-review@v2\n+      - uses: rootstrap/rs-gpt-review@beta\n         name: rs-gpt-review\n         with:\n           github_token: ${{ secrets.GITHUB_TOKEN }}\n@@ -36,3 +36,4 @@ jobs:\n           GITHUB_CONTEXT: ${{ toJson(github) }}\n         run: |\n           echo "$GITHUB_CONTEXT"\n+          pwd\n',
      },
      {
        role: 'system',
        content: 'Here are the comments:',
      },
      {
        role: 'user',
        name: 'pablanco',
        content: '@rs-gpt-review --help',
      },
    ];

    const originalLenght = originalPrompt.length;
    const resultPrompt = removeTextOccurrence(originalPrompt, AVAILABLE_COMMANDS);
    expect(originalLenght).toBeGreaterThan(resultPrompt.length);
  });
  it('should return a shorter string than the original, removing exclude', () => {
    const originalPrompt: any = [
      {
        role: 'system',
        content:
          'You are a helpful assistant for GitHub issues and pull requests.\nYour name is rs-gpt-review and your handle is @rs-gpt-review.\nYou respond to comments when someone mentions you.',
      },
      {
        role: 'system',
        content:
          'The current pull request was created by pablanco in repository lambda-monitor.\nPull request number: 14\nPull request title: `testing`\nPull request description:\n```\n@rs-gpt-review what is this PR about?\n```',
      },
      {
        role: 'system',
        content:
          'Git diff:\ndiff --git a/.github/workflows/rs-gpt-review.yml b/.github/workflows/rs-gpt-review.yml\nindex 116e91c..36e1e0d 100644\n--- a/.github/workflows/rs-gpt-review.yml\n+++ b/.github/workflows/rs-gpt-review.yml\n@@ -25,7 +25,7 @@ jobs:\n     steps:\n       - uses: actions/checkout@v3\n       # The action will only run if the description or comments mentions @rs-gpt-review\n-      - uses: rootstrap/rs-gpt-review@v2\n+      - uses: rootstrap/rs-gpt-review@beta\n         name: rs-gpt-review\n         with:\n           github_token: ${{ secrets.GITHUB_TOKEN }}\n@@ -36,3 +36,4 @@ jobs:\n           GITHUB_CONTEXT: ${{ toJson(github) }}\n         run: |\n           echo "$GITHUB_CONTEXT"\n+          pwd\n',
      },
      {
        role: 'system',
        content: 'Here are the comments:',
      },
      {
        role: 'user',
        name: 'pablanco',
        content: '@rs-gpt-review --exclude value1,value2 give some feedback',
      },
    ];

    const originalLenght = originalPrompt[4].content.length;
    const resultPrompt = removeTextOccurrence(originalPrompt, AVAILABLE_COMMANDS);
    expect(originalPrompt.length).toBe(resultPrompt.length);
    expect(resultPrompt[4].content.length).toBeLessThan(originalLenght);
  });

  it('should return a shorter string than the original, removes prompt help', () => {
    const originalPrompt: any = [
      {
        role: 'system',
        content:
          'You are a helpful assistant for GitHub issues and pull requests.\nYour name is rs-gpt-review and your handle is @rs-gpt-review.\nYou respond to comments when someone mentions you.',
      },
      {
        role: 'system',
        content:
          'The current pull request was created by pablanco in repository lambda-monitor.\nPull request number: 14\nPull request title: `testing`\nPull request description:\n```\n@rs-gpt-review what is this PR about?\n```',
      },
      {
        role: 'system',
        content:
          'Git diff:\ndiff --git a/.github/workflows/rs-gpt-review.yml b/.github/workflows/rs-gpt-review.yml\nindex 116e91c..36e1e0d 100644\n--- a/.github/workflows/rs-gpt-review.yml\n+++ b/.github/workflows/rs-gpt-review.yml\n@@ -25,7 +25,7 @@ jobs:\n     steps:\n       - uses: actions/checkout@v3\n       # The action will only run if the description or comments mentions @rs-gpt-review\n-      - uses: rootstrap/rs-gpt-review@v2\n+      - uses: rootstrap/rs-gpt-review@beta\n         name: rs-gpt-review\n         with:\n           github_token: ${{ secrets.GITHUB_TOKEN }}\n@@ -36,3 +36,4 @@ jobs:\n           GITHUB_CONTEXT: ${{ toJson(github) }}\n         run: |\n           echo "$GITHUB_CONTEXT"\n+          pwd\n',
      },
      {
        role: 'system',
        content: 'Here are the comments:',
      },
      {
        role: 'user',
        name: 'github-actions',
        content:
          '**Available prompts (--prompts):** ``` 1. Explain the purpose of this pull-request``` ``` 2. Find code enhancement opportunities``` ``` 3. Write any missing unit tests``` ``` 4. Could you check the code for SOLID and best practices?``` ``` 5. Could you check any security issues with the OWASP Top 10? Find any potential security risks``` ``` 6. Document the code for this pull-request``` ``` 7. Make a code review, with focus on mantainability``` ``` 8. Make a code review, with focus on performance``` ``` 9. Make a code review, with focus on security```',
      },
    ];

    const originalLenght = originalPrompt.length;
    const resultPrompt = removeTextOccurrence(originalPrompt, AVAILABLE_COMMANDS);
    expect(originalLenght).toBeGreaterThan(resultPrompt.length);
  });

  it('should return a shorter string than the original, removes empty messages', () => {
    const originalPrompt: any = [
      {
        role: 'system',
        content:
          'You are a helpful assistant for GitHub issues and pull requests.\nYour name is rs-gpt-review and your handle is @rs-gpt-review.\nYou respond to comments when someone mentions you.',
      },
      {
        role: 'system',
        content:
          'The current pull request was created by pablanco in repository lambda-monitor.\nPull request number: 14\nPull request title: `testing`\nPull request description:\n```\n@rs-gpt-review what is this PR about?\n```',
      },
      {
        role: 'system',
        content:
          'Git diff:\ndiff --git a/.github/workflows/rs-gpt-review.yml b/.github/workflows/rs-gpt-review.yml\nindex 116e91c..36e1e0d 100644\n--- a/.github/workflows/rs-gpt-review.yml\n+++ b/.github/workflows/rs-gpt-review.yml\n@@ -25,7 +25,7 @@ jobs:\n     steps:\n       - uses: actions/checkout@v3\n       # The action will only run if the description or comments mentions @rs-gpt-review\n-      - uses: rootstrap/rs-gpt-review@v2\n+      - uses: rootstrap/rs-gpt-review@beta\n         name: rs-gpt-review\n         with:\n           github_token: ${{ secrets.GITHUB_TOKEN }}\n@@ -36,3 +36,4 @@ jobs:\n           GITHUB_CONTEXT: ${{ toJson(github) }}\n         run: |\n           echo "$GITHUB_CONTEXT"\n+          pwd\n',
      },
      {
        role: 'system',
        content: 'Here are the comments:',
      },
      {
        role: 'user',
        name: 'pablanco',
        content: '@rs-gpt-review  ',
      },
      {
        role: 'user',
        name: 'github-actions',
        content: '@rs-gpt-review Check any security issues with the OWASP Top 10, find any potential security risks',
      },
      {
        role: 'assistant',
        content:
          'Hello @pablanco! Thank you for mentioning me. I can assist you with reviewing the pull request and checking for security issues. To begin, could you please provide more details on what you specifically want me to review or analyze?',
      },
      {
        role: 'user',
        name: 'pablanco',
        content: '@rs-gpt-review  ',
      },
      {
        role: 'user',
        name: 'github-actions',
        content: '@rs-gpt-review Write any missing unit tests',
      },
      {
        role: 'assistant',
        content:
          "Sure, @pablanco! Writing unit tests completely depends on the code of the pull request, but I will be happy to provide a generic structure to a unit test based on the changes I see in the pull request diff.\n\nThe changes are in a GitHub workflow file. Generally, we don't write unit tests for CI configuration scripts. If you have a particular piece of software functionality in this repo to test, please elaborate. \n\nIf you are aiming for general test coverage, consider adding tests for the most critical parts of your application logic. Ensure to cover different edge cases and error paths in those unit tests. \n\nHere's a generic structure of a unit test written in Python (please adjust it to the specific language you use):\n\n```python\ndef test_my_function():\n    # Setup\n    expected_result = ...\n    input_data = ...\n\n    # Exercise\n    result = my_function(input_data)\n\n    # Verify\n    assert result == expected_result\n\n    # Cleanup - if necessary\n```\n\nRemember, the key to effective unit testing is to be thorough and test all possible cases. This could include not only normal behavior but also edge cases and potential exceptions.",
      },
      {
        role: 'user',
        name: 'pablanco',
        content: '@rs-gpt-review Explain the purpose of this pull-request',
      },
    ];

    const originalLenght = originalPrompt.length;
    const resultPrompt = removeTextOccurrence(originalPrompt, AVAILABLE_COMMANDS);
    expect(originalLenght).toBeGreaterThan(resultPrompt.length);
  });
  it('should return a shorter string than the original, removing exclude', () => {
    const originalPrompt: any = [
      {
        role: 'system',
        content:
          'You are a helpful assistant for GitHub issues and pull requests.\nYour name is rs-gpt-review and your handle is @rs-gpt-review.\nYou respond to comments when someone mentions you.',
      },
      {
        role: 'system',
        content:
          'The current pull request was created by pablanco in repository lambda-monitor.\nPull request number: 14\nPull request title: `testing`\nPull request description:\n```\n@rs-gpt-review what is this PR about?\n```',
      },
      {
        role: 'system',
        content:
          'Git diff:\ndiff --git a/.github/workflows/rs-gpt-review.yml b/.github/workflows/rs-gpt-review.yml\nindex 116e91c..36e1e0d 100644\n--- a/.github/workflows/rs-gpt-review.yml\n+++ b/.github/workflows/rs-gpt-review.yml\n@@ -25,7 +25,7 @@ jobs:\n     steps:\n       - uses: actions/checkout@v3\n       # The action will only run if the description or comments mentions @rs-gpt-review\n-      - uses: rootstrap/rs-gpt-review@v2\n+      - uses: rootstrap/rs-gpt-review@beta\n         name: rs-gpt-review\n         with:\n           github_token: ${{ secrets.GITHUB_TOKEN }}\n@@ -36,3 +36,4 @@ jobs:\n           GITHUB_CONTEXT: ${{ toJson(github) }}\n         run: |\n           echo "$GITHUB_CONTEXT"\n+          pwd\n',
      },
      {
        role: 'system',
        content: 'Here are the comments:',
      },
      {
        role: 'user',
        name: 'pablanco',
        content: '@rs-gpt-review do something with this file --include src/github/pulls.ts and here is other stuff',
      },
    ];

    const originalLenght = originalPrompt[4].content.length;
    const resultPrompt = removeTextOccurrence(originalPrompt, AVAILABLE_COMMANDS);
    expect(originalPrompt.length).toBe(resultPrompt.length);
    expect(resultPrompt[4].content.length).toBeLessThan(originalLenght);
  });
});
